version: '3'
services:
  
  # Prometheus
  prometheus:
    image: prom/prometheus:v2.32.0
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - monitoring
    restart: always
  
  # Node Exporter
  node-exporter:
    image: prom/node-exporter:v1.3.1
    container_name: node-exporter
    networks:
      - monitoring
    restart: always
  
  # Grafana
  grafana:
    image: grafana/grafana:8.3.1
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    ports:
      - '3000:3000'
    volumes:
      - ./grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - monitoring
    restart: always

  # InfluxDB 
  influxdb:
    image: influxdb:latest
    container_name: influxdb
    networks:
      - monitoring
    ports:
      - "8086:8086"
    volumes:
      - ./influxdb:/var/lib/influxdb
    environment:
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_ADMIN_PASSWORD}
      - INFLUXDB_ADMIN_ENABLED=true
      - INFLUXDB_DB=metrics
      - INFLUXDB_HTTP_AUTH_ENABLED=true

  # Chronograf 
  chronograf:
    image: chronograf:latest
    container_name: chronograf
    networks:
      - monitoring
    ports:
      - "8888:8888"
    depends_on:
      - influxdb
    environment:
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_USERNAME=admin
      - INFLUXDB_PASSWORD=${INFLUXDB_PASSWORD}
    restart: unless-stopped


networks:
  monitoring:
    driver: bridge

volumes:
  grafana-data:
  influxdb-data:
  prometheus-data: